// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Suggests laptops within a similar price range.
 *
 * - suggestLaptops - A function that suggests laptops based on a given price.
 * - SuggestLaptopsInput - The input type for the suggestLaptops function.
 * - SuggestLaptopsOutput - The return type for the suggestLaptops function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import { laptopData } from '@/lib/data';
import type { Product } from '@/lib/types';


const SuggestLaptopsInputSchema = z.object({
  price: z
    .number()
    .describe('The price of the laptop to base suggestions on.'),
});
export type SuggestLaptopsInput = z.infer<
  typeof SuggestLaptopsInputSchema
>;

const SuggestLaptopsOutputSchema = z.object({
    suggestions: z.array(z.object({
        id: z.string(),
        category: z.enum(['laptop', 'peripheral']),
        name: z.string(),
        price: z.number(),
        url: z.string(),
        imageUrl: z.string(),
        dataAiHint: z.string(),
        specs: z.array(z.object({
            name: z.string(),
            value: z.string(),
            icon: z.string(),
        })),
    })).describe('A list of suggested laptops.'),
});

export type SuggestLaptopsOutput = z.infer<
  typeof SuggestLaptopsOutputSchema
>;

export async function suggestLaptops(
  input: SuggestLaptopsInput
): Promise<SuggestLaptopsOutput> {
  return suggestLaptopsFlow(input);
}

const suggestLaptopsFlow = ai.defineFlow(
  {
    name: 'suggestLaptopsFlow',
    inputSchema: SuggestLaptopsInputSchema,
    outputSchema: SuggestLaptopsOutputSchema,
  },
  async ({price}) => {
    const priceRange = 10000;
    const lowerBound = price - priceRange;
    const upperBound = price + priceRange;

    const suggestions = laptopData.filter(laptop => laptop.price >= lowerBound && laptop.price <= upperBound);
    
    return { suggestions };
  }
);
