
// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Suggests laptops with similar specifications by searching the internet.
 *
 * - suggestLaptops - A function that suggests laptops based on a given set of specs.
 * - SuggestLaptopsInput - The input type for the suggestLaptops function.
 * - SuggestLaptopsOutput - The return type for the suggestLaptops function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import type { Product } from '@/lib/types';


const SuggestLaptopsInputSchema = z.object({
    cpu: z.string().describe('The CPU of the laptop to base suggestions on.'),
    gpu: z.string().describe('The GPU of the laptop to base suggestions on.'),
    ram: z.string().describe('The RAM of the laptop to base suggestions on.'),
    price: z.number().describe('The price of the laptop in INR to base suggestions on.'),
});
export type SuggestLaptopsInput = z.infer<
  typeof SuggestLaptopsInputSchema
>;

const SuggestLaptopsOutputSchema = z.object({
    suggestions: z.array(z.object({
        id: z.string().describe('A unique identifier for the product, in a URL-friendly format (e.g., "msi-creator-z16").'),
        category: z.enum(['laptop', 'peripheral']),
        name: z.string().describe('The full name of the laptop.'),
        price: z.number().describe('The estimated price of the laptop in INR.'),
        url: z.string().describe('A direct link to the product purchase page.'),
        imageUrl: z.string().describe('A direct link to a high-quality image of the product.'),
        dataAiHint: z.string().describe('One or two keywords for the product image (e.g., "gaming laptop").'),
        specs: z.array(z.object({
            name: z.string().describe("The name of the specification (e.g., 'CPU', 'GPU')."),
            value: z.string().describe("The value of the specification (e.g., 'Intel Core i9', 'NVIDIA RTX 4070')."),
            icon: z.string().describe("The corresponding Lucide icon name (e.g., 'Cpu', 'Component')."),
        })),
    })).describe('A list of suggested laptops.'),
});

export type SuggestLaptopsOutput = z.infer<
  typeof SuggestLaptopsOutputSchema
>;

export async function suggestLaptops(
  input: SuggestLaptopsInput
): Promise<SuggestLaptopsOutput> {
  return suggestLaptopsFlow(input);
}

const prompt = ai.definePrompt({
    name: 'laptopSuggestionPrompt',
    input: { schema: SuggestLaptopsInputSchema },
    output: { schema: SuggestLaptopsOutputSchema },
    prompt: `You are a world-class expert at recommending high-performance laptops. A user is looking at a laptop with the following specifications:
- CPU: {{cpu}}
- GPU: {{gpu}}
- RAM: {{ram}}
- Price: {{price}} INR

Your task is to search the internet and find 3 different, more recent, or better value laptops with comparable or superior specifications.
The suggested laptops MUST be within a price range of +/- 10,000 INR of the original laptop's price.

For each suggestion, you must provide:
1. A unique ID (e.g., 'acer-predator-helios-16').
2. The full product name.
3. The current price in Indian Rupees (INR).
4. A direct URL to a reputable e-commerce site where it can be purchased.
5. A direct URL to a high-quality, official product image.
6. A one or two-word AI hint for the image.
7. A list of key specifications (CPU, GPU, RAM, Storage, Display) with appropriate Lucide icon names.

Return ONLY the JSON object containing the list of suggestions, formatted exactly according to the output schema. Do not include any other text or explanation.`,
});

const suggestLaptopsFlow = ai.defineFlow(
  {
    name: 'suggestLaptopsFlow',
    inputSchema: SuggestLaptopsInputSchema,
    outputSchema: SuggestLaptopsOutputSchema,
  },
  async (input) => {
    const { output } = await prompt(input);
    return output || { suggestions: [] };
  }
);
